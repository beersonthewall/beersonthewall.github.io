<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>documentation on Beersonthewall</title>
    <link>https://www.beersonthewall.com/tags/documentation/</link>
    <description>Recent content in documentation on Beersonthewall</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 Nov 2021 09:30:39 -0600</lastBuildDate>
    
	<atom:link href="https://www.beersonthewall.com/tags/documentation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reading Documentation</title>
      <link>https://www.beersonthewall.com/blog/reading-docs/</link>
      <pubDate>Thu, 11 Nov 2021 09:30:39 -0600</pubDate>
      
      <guid>https://www.beersonthewall.com/blog/reading-docs/</guid>
      <description>Let&amp;rsquo;s talk about how to read documentation. Documentation is a hot topic among programmers, and for good reason. However, most of the discussion I&amp;rsquo;ve seen is about writing documentation not reading.
How do you read documentation? If you&amp;rsquo;re like most programmers I&amp;rsquo;ve seen in my career you use documentation as a quick reference point. Some task for a particular piece of software (programming language, database, etc.) has you stuck. Severity of the &amp;ldquo;stuck&amp;rdquo; ranges from unknown syntax to &amp;ldquo;How do I recover my corrupted database?</description>
    </item>
    
  </channel>
</rss>